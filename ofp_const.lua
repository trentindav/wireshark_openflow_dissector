-- Author: Davide Trentin (trentindav@gmail.com)
-- Licensed under the Apache License, Version 2.0, see LICENSE for details

M = {}

M["ofp_versions"] = {
    [4] = "OF1.3",
    [5] = "OF1.4",
    [6] = "OF1.5",
}

M["ofp_type"] = {
    [0] = "OFPT_HELLO", [1] = "OFPT_ERROR", [2] = "OFPT_ECHO_REQUEST", [3] = "OFPT_ECHO_REPLY",
    [4] = "OFPT_EXPERIMENTER", [5] = "OFPT_FEATURES_REQUEST", [6] = "OFPT_FEATURES_REPLY", [7] = "OFPT_GET_CONFIG_REQUEST",
    [8] = "OFPT_GET_CONFIG_REPLY", [9] = "OFPT_SET_CONFIG", [10] = "OFPT_PACKET_IN", [11] = "OFPT_FLOW_REMOVED",
    [12] = "OFPT_PORT_STATUS", [13] = "OFPT_PACKET_OUT", [14] = "OFPT_FLOW_MOD", [15] = "OFPT_GROUP_MOD",
    [16] = "OFPT_PORT_MOD", [17] = "OFPT_TABLE_MOD", [18] = "OFPT_MULTIPART_REQUEST", [19] = "OFPT_MULTIPART_REPLY",
    [20] = "OFPT_BARRIER_REQUEST", [21] = "OFPT_BARRIER_REPLY", [22] = "deprecated (22)", [23] = "deprecated (23)",
    [24] = "OFPT_ROLE_REQUEST", [25] = "OFPT_ROLE_REPLY", [26] = "OFPT_GET_ASYNC_REQUEST", [27] = "OFPT_GET_ASYNC_REPLY",
    [28] = "OFPT_SET_ASYNC", [29] = "OFPT_METER_MOD", [30] = "OFPT_ROLE_STATUS", [31] = "OFPT_TABLE_STATUS",
    [32] = "OFPT_REQUESTFORWARD", [33] = "OFPT_BUNDLE_CONTROL", [34] = "OFPT_BUNDLE_ADD_MESSAGE", [35] = "OFPT_CONTROLLER_STATUS",
}

M["ofp_hello_elem_type"] = {
    [1] = "OFPHET_VERSIONBITMAP"
}

M.OFPMP_DESC = 0
M.OFPMP_FLOW_DESC = 1
M.OFPMP_AGGREGATE_STATS = 2
M.OFPMP_TABLE_STATS = 3
M.OFPMP_PORT_STATS = 4
M.OFPMP_QUEUE_STATS = 5
M.OFPMP_GROUP_STATS = 6
M.OFPMP_GROUP_DESC = 7
M.OFPMP_GROUP_FEATURES = 8
M.OFPMP_METER_STATS = 9
M.OFPMP_METER_DESC = 10
M.OFPMP_METER_FEATURES = 11
M.OFPMP_TABLE_FEATURES = 12
M.OFPMP_PORT_DESC = 13
M.OFPMP_TABLE_DESC = 14
M.OFPMP_QUEUE_DESC = 15
M.OFPMP_FLOW_MONITOR = 16
M.OFPMP_FLOW_STATS = 17
M.OFPMP_CONTROLLER_STATUS = 18
M.OFPMP_BUNDLE_FEATURES = 19
M.OFPMP_EXPERIMENTER = 65535
M["ofp_multipart_type"] = {
    [0] = "OFPMP_DESC",
    [1] = "OFPMP_FLOW_DESC",
    [2] = "OFPMP_AGGREGATE_STATS",
    [3] = "OFPMP_TABLE_STATS",
    [4] = "OFPMP_PORT_STATS",
    [5] = "OFPMP_QUEUE_STATS",
    [6] = "OFPMP_GROUP_STATS",
    [7] = "OFPMP_GROUP_DESC",
    [8] = "OFPMP_GROUP_FEATURES",
    [9] = "OFPMP_METER_STATS",
    [10] = "OFPMP_METER_DESC",
    [11] = "OFPMP_METER_FEATURES",
    [12] = "OFPMP_TABLE_FEATURES",
    [13] = "OFPMP_PORT_DESC",
    [14] = "OFPMP_TABLE_DESC",
    [15] = "OFPMP_QUEUE_DESC",
    [16] = "OFPMP_FLOW_MONITOR",
    [17] = "OFPMP_FLOW_STATS",
    [18] = "OFPMP_CONTROLLER_STATUS",
    [19] = "OFPMP_BUNDLE_FEATURES",
    [65535] = "OFPMP_EXPERIMENTER",
}

M["ofp_flow_stats_reason"] = {
    [0] = "OFPFSR_STATS_REQUEST",
    [1] = "OFPFSR_STAT_TRIGGER",
}

M.ofp_match_type = {
    [0] = "OFPMT_STANDARD",
    [1] = "OFPMT_OXM"
}

M.ofp_oxm_class = {
    [0x0000] = "OFPXMC_NXM_0",
    [0x0001] = "OFPXMC_NXM_1",
    [0x8000] = "OFPXMC_OPENFLOW_BASIC",
    [0x8001] = "OFPXMC_PACKETS_REGS",
    [0xffff] = "OFPXMC_EXPERIMENTER",
}

M.oxm_ofb_match_fields = {
    [0] = "OFPXMT_OFB_IN_PORT",
    [1] = "OFPXMT_OFB_IN_PHY_PORT",
    [2] = "OFPXMT_OFB_METADATA",
    [3] = "OFPXMT_OFB_ETH_DST",
    [4] = "OFPXMT_OFB_ETH_SRC",
    [5] = "OFPXMT_OFB_ETH_TYPE",
    [6] = "OFPXMT_OFB_VLAN_VID",
    [7] = "OFPXMT_OFB_VLAN_PCP",
    [8] = "OFPXMT_OFB_IP_DSCP",
    [9] = "OFPXMT_OFB_IP_ECN",
    [10] = "OFPXMT_OFB_IP_PROTO",
    [11] = "OFPXMT_OFB_IPV4_SRC",
    [12] = "OFPXMT_OFB_IPV4_DST",
    [13] = "OFPXMT_OFB_TCP_SRC",
    [14] = "OFPXMT_OFB_TCP_DST",
    [15] = "OFPXMT_OFB_UDP_SRC",
    [16] = "OFPXMT_OFB_UDP_DST",
    [17] = "OFPXMT_OFB_SCTP_SRC",
    [18] = "OFPXMT_OFB_SCTP_DST",
    [19] = "OFPXMT_OFB_ICMPV4_TYPE",
    [20] = "OFPXMT_OFB_ICMPV4_CODE",
    [21] = "OFPXMT_OFB_ARP_OP",
    [22] = "OFPXMT_OFB_ARP_SPA",
    [23] = "OFPXMT_OFB_ARP_TPA",
    [24] = "OFPXMT_OFB_ARP_SHA",
    [25] = "OFPXMT_OFB_ARP_THA",
    [26] = "OFPXMT_OFB_IPV6_SRC",
    [27] = "OFPXMT_OFB_IPV6_DST",
    [28] = "OFPXMT_OFB_IPV6_FLABEL",
    [29] = "OFPXMT_OFB_ICMPV6_TYPE",
    [30] = "OFPXMT_OFB_ICMPV6_CODE",
    [31] = "OFPXMT_OFB_IPV6_ND_TARGET",
    [32] = "OFPXMT_OFB_IPV6_ND_SLL",
    [33] = "OFPXMT_OFB_IPV6_ND_TLL",
    [34] = "OFPXMT_OFB_MPLS_LABEL",
    [35] = "OFPXMT_OFB_MPLS_TC",
    [36] = "OFPXMT_OFB_MPLS_BOS",
    [37] = "OFPXMT_OFB_PBB_ISID",
    [38] = "OFPXMT_OFB_TUNNEL_ID",
    [39] = "OFPXMT_OFB_IPV6_EXTHDR",
    [41] = "OFPXMT_OFB_PBB_UCA",
    [42] = "OFPXMT_OFB_TCP_FLAGS",
    [43] = "OFPXMT_OFB_ACTSET_OUTPUT",
    [44] = "OFPXMT_OFB_PACKET_TYPE",
}

M.ofp_oxs_class = {
    [0x8002] = "OFPXSC_OPENFLOW_BASIC",
    [0xffff] = "OFPXSC_EXPERIMENTER"
}

M.OFPXST_OFB_DURATION = 0
M.OFPXST_OFB_IDLE_TIME = 1
M.OFPXST_OFB_FLOW_COUNT = 3
M.OFPXST_OFB_PACKET_COUNT = 4
M.OFPXST_OFB_BYTE_COUNT = 5
M.oxs_ofb_stat_fields = {
    [M.OFPXST_OFB_DURATION] = "OFPXST_OFB_DURATION",
    [M.OFPXST_OFB_IDLE_TIME] = "OFPXST_OFB_IDLE_TIME",
    [M.OFPXST_OFB_FLOW_COUNT] = "OFPXST_OFB_FLOW_COUNT",
    [M.OFPXST_OFB_PACKET_COUNT] = "OFPXST_OFB_PACKET_COUNT",
    [M.OFPXST_OFB_BYTE_COUNT] = "OFPXST_OFB_BYTE_COUNT",
}

M.OFPP_MAX = 0xffffff00
M.OFPP_UNSET = 0xfffffff7
M.OFPP_IN_PORT = 0xfffffff8
M.OFPP_TABLE = 0xfffffff9
M.OFPP_NORMAL = 0xfffffffa
M.OFPP_FLOOD = 0xfffffffb
M.OFPP_ALL = 0xfffffffc
M.OFPP_CONTROLLER = 0xfffffffd
M.OFPP_LOCAL = 0xfffffffe
M.OFPP_ANY = 0xffffffff
M.ofp_port_no = {
    [M.OFPP_MAX] = "OFPP_MAX",
    [M.OFPP_UNSET] = "OFPP_UNSET",
    [M.OFPP_IN_PORT] = "OFPP_IN_PORT",
    [M.OFPP_TABLE] = "OFPP_TABLE",
    [M.OFPP_NORMAL] = "OFPP_NORMAL",
    [M.OFPP_FLOOD] = "OFPP_FLOOD",
    [M.OFPP_ALL] = "OFPP_ALL",
    [M.OFPP_CONTROLLER] = "OFPP_CONTROLLER",
    [M.OFPP_LOCAL] = "OFPP_LOCAL",
    [M.OFPP_ANY] = "OFPP_ANY",
}

M.OFPG_MAX = 0xffffff00
M.OFPG_ALL = 0xfffffffc
M.OFPG_ANY = 0xffffffff
M.ofp_group = {
    [M.OFPG_MAX] = "OFPG_MAX",
    [M.OFPG_ALL] = "OFPG_ALL",
    [M.OFPG_ANY] = "OFPG_ANY",
}

M.OFPAT_OUTPUT = 0
M.OFPAT_COPY_TTL_OUT = 11
M.OFPAT_COPY_TTL_IN = 12
M.OFPAT_SET_MPLS_TTL = 15
M.OFPAT_DEC_MPLS_TTL = 16
M.OFPAT_PUSH_VLAN = 17
M.OFPAT_POP_VLAN = 18
M.OFPAT_PUSH_MPLS = 19
M.OFPAT_POP_MPLS = 20
M.OFPAT_SET_QUEUE = 21
M.OFPAT_GROUP = 22
M.OFPAT_SET_NW_TTL = 23
M.OFPAT_DEC_NW_TTL = 24
M.OFPAT_SET_FIELD = 25
M.OFPAT_PUSH_PBB = 26
M.OFPAT_POP_PBB = 27
M.OFPAT_COPY_FIELD = 28
M.OFPAT_METER = 29
M.OFPAT_EXPERIMENTER = 0xFFFF
M.ofp_action_type = {
    [M.OFPAT_OUTPUT] = "OFPAT_OUTPUT",
    [M.OFPAT_COPY_TTL_OUT] = "OFPAT_COPY_TTL_OUT",
    [M.OFPAT_COPY_TTL_IN] = "OFPAT_COPY_TTL_IN",
    [M.OFPAT_SET_MPLS_TTL] = "OFPAT_SET_MPLS_TTL",
    [M.OFPAT_DEC_MPLS_TTL] = "OFPAT_DEC_MPLS_TTL",
    [M.OFPAT_PUSH_VLAN] = "OFPAT_PUSH_VLAN",
    [M.OFPAT_POP_VLAN] = "OFPAT_POP_VLAN",
    [M.OFPAT_PUSH_MPLS] = "OFPAT_PUSH_MPLS",
    [M.OFPAT_POP_MPLS] = "OFPAT_POP_MPLS",
    [M.OFPAT_SET_QUEUE] = "OFPAT_SET_QUEUE",
    [M.OFPAT_GROUP] = "OFPAT_GROUP",
    [M.OFPAT_SET_NW_TTL] = "OFPAT_SET_NW_TTL",
    [M.OFPAT_DEC_NW_TTL] = "OFPAT_DEC_NW_TTL",
    [M.OFPAT_SET_FIELD] = "OFPAT_SET_FIELD",
    [M.OFPAT_PUSH_PBB] = "OFPAT_PUSH_PBB",
    [M.OFPAT_POP_PBB] = "OFPAT_POP_PBB",
    [M.OFPAT_COPY_FIELD] = "OFPAT_COPY_FIELD",
    [M.OFPAT_METER] = "OFPAT_METER",
    [M.OFPAT_EXPERIMENTER] = "OFPAT_EXPERIMENTER",
}


M.OFPGC_ADD = 0
M.OFPGC_MODIFY = 1
M.OFPGC_DELETE = 2
M.OFPGC_INSERT_BUCKET = 3
M.OFPGC_RESERVED = 4
M.OFPGC_REMOVE_BUCKET = 5
M.ofp_group_mod_command = {
    [M.OFPGC_ADD] = "OFPGC_ADD",
    [M.OFPGC_MODIFY] = "OFPGC_MODIFY",
    [M.OFPGC_DELETE] = "OFPGC_DELETE",
    [M.OFPGC_INSERT_BUCKET] = "OFPGC_INSERT_BUCKET",
    [M.OFPGC_RESERVED] = "OFPGC_RESERVED",
    [M.OFPGC_REMOVE_BUCKET] = "OFPGC_REMOVE_BUCKET",
}

M.OFPGT_ALL = 0
M.OFPGT_SELECT = 1
M.OFPGT_INDIRECT = 2
M.OFPGT_FF = 3
M.ofp_group_type = {
    [M.OFPGT_ALL] = "OFPGT_ALL",
    [M.OFPGT_SELECT] = "OFPGT_SELECT",
    [M.OFPGT_INDIRECT] = "OFPGT_INDIRECT",
    [M.OFPGT_FF] = "OFPGT_FF",
}

M.OFPG_MAX = 0xFFFFFF00
M.OFPG_ALL = 0xFFFFFFFC
M.OFPG_ANY = 0xFFFFFFFF
M.ofp_group = {
    [M.OFPG_MAX] = "OFPG_MAX",
    [M.OFPG_ALL] = "OFPG_ALL",
    [M.OFPG_ANY] = "OFPG_ANY",
}


M.OFPG_BUCKET_MAX = 0xFFFFFF00
M.OFPG_BUCKET_FIRST =  0xFFFFFFFD
M.OFPG_BUCKET_LAST = 0xFFFFFFFE
M.OFPG_BUCKET_ALL = 0xFFFFFFFF
M.ofp_group_bucket = {
    [M.OFPG_BUCKET_MAX] = "OFPG_BUCKET_MAX",
    [M.OFPG_BUCKET_FIRST] = "OFPG_BUCKET_FIRST",
    [M.OFPG_BUCKET_LAST] = "OFPG_BUCKET_LAST",
    [M.OFPG_BUCKET_ALL] = "OFPG_BUCKET_ALL",
}

-- Tools
function roundup(orig_len)
    return math.floor((orig_len+7)/8)*8
end
M.roundup = roundup

return M